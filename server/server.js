/* global process */
import express from "express";
import nodemailer from "nodemailer";
import cors from "cors";
import 'dotenv/config'

//–∑–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ express
const app = express();

const PORT = process.env.PORT || 5000;
//–ø–æ–∑–≤–æ–ª—è–µ—Ç —Ñ—Ä–æ–Ω—Ç—É –æ–±—â–∞—Ç—å—Å—è —Å –±—ç–∫–æ–º
app.use(cors());
//—É—á–∏—Ç —Å–µ—Ä–µ–≤–µ—Ä –ø–æ–Ω–∏–º–∞—Ç—å json
app.use(express.json());
//—Ç–µ—Å—Ç–æ–≤—ã–π –æ—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞ –≤ –±—Ä–∞—É–∑–µ—Ä–µ
app.get("/api/test", (req, resp) => {
  resp.json({ message: "server workicng" });
});



app.post("/api/send-email", async (req, resp) => {
  try {
    // 1. –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ç–µ–ª–∞ –∑–∞–ø—Ä–æ—Å–∞
    const { email, message } = req.body;
    if (!email || !message) {
      return resp.status(400).json({
        success: false,
        message: "–í—Å–µ –ø–æ–ª—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è",
      });
    }
    // 3. –°–æ–∑–¥–∞–µ–º —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–∏—Å–µ–º
    const transporter = nodemailer.createTransport({
      service: "gmail",
      auth: {
        user: process.env.GMAIL_USER,
        pass: process.env.GMAIL_APP_PASS,
      },
    });
    // 4. –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø–∏—Å—å–º–æ
    const mailOptions = {
      from: process.env.GMAIL_USER,
      to: process.env.RECEIVER_EMAIL,
      replyTo: email,
      subject: `üíº –ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç ${email}`,
      html:`
    <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
      <h2 style="color: #2c3e50; text-align: center;">üíº –ù–æ–≤—ã–π –∑–∞–∫–∞–∑ —Å —Å–∞–π—Ç–∞</h2>
      
      <div style="background: #f8f9fa; padding: 20px; border-radius: 8px; margin: 20px 0;">
        <h3 style="color: #495057; margin-top: 0;">üìß –ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:</h3>
        <p><strong>Email:</strong> ${email}</p>
        <p><strong>–î–∞—Ç–∞:</strong> ${new Date().toLocaleString("ru-RU")}</p>
      </div>
      
      <div style="background: #e8f4fd; padding: 20px; border-radius: 8px; border-left: 4px solid #3498db;">
        <h3 style="color: #495057; margin-top: 0;">üí¨ –°–æ–æ–±—â–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞:</h3>
        <p style="white-space: pre-wrap; line-height: 1.6; background: white; padding: 15px; border-radius: 5px;">${message}</p>
      </div>
      
      <div style="margin-top: 25px; padding: 15px; background: #f1f3f4; border-radius: 5px; text-align: center;">
        <p style="margin: 0; color: #666; font-size: 14px;">
          üì© <strong>–ß—Ç–æ–±—ã –æ—Ç–≤–µ—Ç–∏—Ç—å –∫–ª–∏–µ–Ω—Ç—É</strong>, –ø—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏—Ç–µ "–û—Ç–≤–µ—Ç–∏—Ç—å" –≤ –≤–∞—à–µ–º –ø–æ—á—Ç–æ–≤–æ–º –∫–ª–∏–µ–Ω—Ç–µ
        </p>
      </div>
    </div>
  `,
    };
        // 5. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–∏—Å—å–º–æ
        await transporter.sendMail(mailOptions);
          // 6. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç
          resp.json({
            success:true,
            message:"–°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!–Ø —Å–≤—è–∂—É—Å—å —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–∏–µ –≤—Ä–µ–º—è"
          }) 
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏",error);
    resp.status(500).json({
        success:false,
        message:"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è"
    })
  }
});

//—É–∫–∞–∑—ã–≤–∞–µ–º –Ω–∞ –∫–∞–∫–æ–º –ø–æ—Ä—Ç–µ –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –ª–æ–∫–∞–ª—å–Ω—ã–π —Å–µ—Ä–≤–µ—Ä
app.listen(PORT, () => {
  console.log(`server open in ${PORT}`);
});
